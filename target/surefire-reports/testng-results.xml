<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="14" total="22" passed="4" failed="4" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
    <line>
      <![CDATA[SetUp Completed]]>
    </line>
  </reporter-output>
  <suite started-at="2022-10-14T12:20:20 IST" name="Suite" finished-at="2022-10-14T12:20:26 IST" duration-ms="6132">
    <groups>
    </groups>
    <test started-at="2022-10-14T12:20:20 IST" name="Test" finished-at="2022-10-14T12:20:26 IST" duration-ms="6132">
      <class name="apitest.ReleaseDevice">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.ReleaseDevice@17d919b6]" started-at="2022-10-14T12:20:22 IST" name="setUp" finished-at="2022-10-14T12:20:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidDelete()[pri:3, instance:apitest.ReleaseDevice@17d919b6]" started-at="2022-10-14T12:20:22 IST" name="ValidDelete" finished-at="2022-10-14T12:20:22 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at java.base/java.lang.String.replace(String.java:2143)
at apitest.ReleaseDevice.ValidDelete(ReleaseDevice.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidDelete -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.ReleaseDevice@17d919b6]" started-at="2022-10-14T12:20:22 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidDelete status=FAILURE method=ReleaseDevice.ValidDelete()[pri:3, instance:apitest.ReleaseDevice@17d919b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.ReleaseDevice@17d919b6]" started-at="2022-10-14T12:20:22 IST" name="tearDown" finished-at="2022-10-14T12:20:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitest.ReleaseDevice -->
      <class name="apitest.GetAdminDetails">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.GetAdminDetails@6c7a164b]" started-at="2022-10-14T12:20:25 IST" name="setUp" finished-at="2022-10-14T12:20:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getTestTemplates()[pri:4, instance:apitest.GetAdminDetails@6c7a164b]" started-at="2022-10-14T12:20:25 IST" name="getTestTemplates" finished-at="2022-10-14T12:20:26 IST" duration-ms="647" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at apitest.GetAdminDetails.getTestTemplates(GetAdminDetails.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestTemplates -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.GetAdminDetails@6c7a164b]" started-at="2022-10-14T12:20:26 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTestTemplates status=FAILURE method=GetAdminDetails.getTestTemplates()[pri:4, instance:apitest.GetAdminDetails@6c7a164b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.GetAdminDetails@6c7a164b]" started-at="2022-10-14T12:20:26 IST" name="tearDown" finished-at="2022-10-14T12:20:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitest.GetAdminDetails -->
      <class name="apitest.GetUserDetails">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.GetUserDetails@7d61eb55]" started-at="2022-10-14T12:20:24 IST" name="setUp" finished-at="2022-10-14T12:20:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getTestTemplates()[pri:4, instance:apitest.GetUserDetails@7d61eb55]" started-at="2022-10-14T12:20:24 IST" name="getTestTemplates" finished-at="2022-10-14T12:20:24 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestTemplates -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.GetUserDetails@7d61eb55]" started-at="2022-10-14T12:20:24 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTestTemplates status=SUCCESS method=GetUserDetails.getTestTemplates()[pri:4, instance:apitest.GetUserDetails@7d61eb55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.GetUserDetails@7d61eb55]" started-at="2022-10-14T12:20:24 IST" name="tearDown" finished-at="2022-10-14T12:20:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitest.GetUserDetails -->
      <class name="apitest.GetTemplateDetail">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.GetTemplateDetail@34129c78]" started-at="2022-10-14T12:20:23 IST" name="setUp" finished-at="2022-10-14T12:20:23 IST" duration-ms="12" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getTestDetails()[pri:4, instance:apitest.GetTemplateDetail@34129c78]" started-at="2022-10-14T12:20:23 IST" name="getTestDetails" finished-at="2022-10-14T12:20:24 IST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestDetails -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.GetTemplateDetail@34129c78]" started-at="2022-10-14T12:20:24 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTestDetails status=SUCCESS method=GetTemplateDetail.getTestDetails()[pri:4, instance:apitest.GetTemplateDetail@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.GetTemplateDetail@34129c78]" started-at="2022-10-14T12:20:24 IST" name="tearDown" finished-at="2022-10-14T12:20:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitest.GetTemplateDetail -->
      <class name="apitest.GetTestTemplates">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.GetTestTemplates@53f3bdbd]" started-at="2022-10-14T12:20:22 IST" name="setUp" finished-at="2022-10-14T12:20:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getTestTemplates()[pri:4, instance:apitest.GetTestTemplates@53f3bdbd]" started-at="2022-10-14T12:20:22 IST" name="getTestTemplates" finished-at="2022-10-14T12:20:23 IST" duration-ms="1022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestTemplates -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.GetTestTemplates@53f3bdbd]" started-at="2022-10-14T12:20:23 IST" name="tearDown" finished-at="2022-10-14T12:20:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.GetTestTemplates@53f3bdbd]" started-at="2022-10-14T12:20:23 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTestTemplates status=SUCCESS method=GetTestTemplates.getTestTemplates()[pri:4, instance:apitest.GetTestTemplates@53f3bdbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
      </class> <!-- apitest.GetTestTemplates -->
      <class name="apitest.GetNumberOfDevices">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:apitest.GetNumberOfDevices@376a0d86]" started-at="2022-10-14T12:20:14 IST" name="setExtent" finished-at="2022-10-14T12:20:20 IST" duration-ms="5142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.GetNumberOfDevices@376a0d86]" started-at="2022-10-14T12:20:20 IST" name="setUp" finished-at="2022-10-14T12:20:20 IST" duration-ms="532" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getDeviceId()[pri:1, instance:apitest.GetNumberOfDevices@376a0d86]" started-at="2022-10-14T12:20:20 IST" name="getDeviceId" finished-at="2022-10-14T12:20:22 IST" duration-ms="1748" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at apitest.GetNumberOfDevices.getDeviceId(GetNumberOfDevices.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeviceId -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.GetNumberOfDevices@376a0d86]" started-at="2022-10-14T12:20:22 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:22 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDeviceId status=FAILURE method=GetNumberOfDevices.getDeviceId()[pri:1, instance:apitest.GetNumberOfDevices@376a0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.GetNumberOfDevices@376a0d86]" started-at="2022-10-14T12:20:22 IST" name="tearDown" finished-at="2022-10-14T12:20:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:apitest.GetNumberOfDevices@376a0d86]" started-at="2022-10-14T12:20:36 IST" name="endReport" finished-at="2022-10-14T12:20:36 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- apitest.GetNumberOfDevices -->
      <class name="apitest.CaptureScreenshot">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.CaptureScreenshot@62656be4]" started-at="2022-10-14T12:20:22 IST" name="setUp" finished-at="2022-10-14T12:20:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CaptureDeviceScreenshot()[pri:2, instance:apitest.CaptureScreenshot@62656be4]" started-at="2022-10-14T12:20:22 IST" name="CaptureDeviceScreenshot" finished-at="2022-10-14T12:20:22 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at java.base/java.lang.String.replace(String.java:2143)
at apitest.CaptureScreenshot.CaptureDeviceScreenshot(CaptureScreenshot.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaptureDeviceScreenshot -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.CaptureScreenshot@62656be4]" started-at="2022-10-14T12:20:22 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CaptureDeviceScreenshot status=FAILURE method=CaptureScreenshot.CaptureDeviceScreenshot()[pri:2, instance:apitest.CaptureScreenshot@62656be4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.CaptureScreenshot@62656be4]" started-at="2022-10-14T12:20:22 IST" name="tearDown" finished-at="2022-10-14T12:20:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitest.CaptureScreenshot -->
      <class name="apitest.GetProjectDetails">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apitest.GetProjectDetails@222a59e6]" started-at="2022-10-14T12:20:24 IST" name="setUp" finished-at="2022-10-14T12:20:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SetUp Completed]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getProjectDetails()[pri:4, instance:apitest.GetProjectDetails@222a59e6]" started-at="2022-10-14T12:20:24 IST" name="getProjectDetails" finished-at="2022-10-14T12:20:25 IST" duration-ms="708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProjectDetails -->
        <test-method is-config="true" signature="attachScreenshot(org.testng.ITestResult)[pri:0, instance:apitest.GetProjectDetails@222a59e6]" started-at="2022-10-14T12:20:25 IST" name="attachScreenshot" finished-at="2022-10-14T12:20:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getProjectDetails status=SUCCESS method=GetProjectDetails.getProjectDetails()[pri:4, instance:apitest.GetProjectDetails@222a59e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:apitest.GetProjectDetails@222a59e6]" started-at="2022-10-14T12:20:25 IST" name="tearDown" finished-at="2022-10-14T12:20:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apitest.GetProjectDetails -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
